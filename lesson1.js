"use strict" 

let stop = false;

while(!stop) {
    let choice = "";
    choice = prompt("Введите номер задания: \n \
            1 - цельсий в фаренгейт; \n \
            2 - admin и name (в консоли); \n \
            3 - значиния выражений (в консоли); \n \
            4 - имена переменных (в консоли);\n \
            или оставьте пустую строку для выхода.");
    if (choice == 1) { task1(); } 
    else if (choice == 2) { task2(); } 
    else if (choice == 3) { task3(); } 
    else if (choice == 4) { task4(); }
    else { stop = true; };
}


function celsiusToFahrenheit (t_celsius) {
    return 9 / 5 * t_celsius + 32;
}

function task1() {
    let tCelsius = prompt("Введите температуру в градусах Цельсия:");
    let tFahrenheit = celsiusToFahrenheit(tCelsius);
    alert(`${tCelsius} градусов Цельсия = ${tFahrenheit} градусов Фаренгейта`);
}

function task2() {
    console.log("Задание 2");   
    
    let admin = "";
    let name = "";
    name = "Василий";
    admin = name;
    console.log("admin = " + admin); //Василий

    console.log("----------------------");
}

function task3() {
    console.log("Задание 3");   
    console.log("Для пояснений см. комментарии в файле lesson1.js");
    
    /*
    "10 + 10 + "10" = 2010, 
    Т.к. оператор + выполняется слева направо, сначала он сложит 10 и 10, 
    получив 20. Затем, т.к. следующий аругмент имеет тип string, 20 будет 
    приведено к string и произойдет конкатенация строк.
    */
    console.log('10 + 10 + "10" = ' + (10 + 10 + "10"));

    /*
    10 + "10" + 10 = 101010
    Т.к. оператор + выполняет слева направо, а второй аргумент имеет тип string, 
    первый аргумент будет преобразован в string и выполнена конкатенация. 
    Аналогично второй оператор + преобразует третий аргмент в string и выполнит
    конкатенацию.
    */
    console.log('10 + "10" + 10 = ' + (10 + "10" + 10));

    /*
    10 + 10 + +"10" = 30
    так как унарный плюс имеет приоритет на сложением, он сначала выполнит 
    преобразование строки "10" в число. Затем будет выполнено сложение чисел.
    */
    console.log('10 + 10 + +"10" = ' + (10 + 10 + +"10"));

    /*
    "10 / -"" = -Infinity
    Т.к. унарный минус имеет приоритет над делением, он пробразует пустую строку
    в -0. Затем произойдет деление на -0, которое вернет -Infinity.
    */
    console.log('10 / -"" = ' + (10 / -""));


    /*
    10 / +"2,5" = NaN,
    Т.к. унарный плюс имеет приоритет над делением, сначала будет выполено 
    преобразование строки в число, но т.к. запятая не распознается Javascript 
    как разделитель разрядов, он не сможет превратить "2,5" в число и 
    преобразует его в NaN. Затем будет выполнено деление на NaN, которое вернет
    NaN.
    */
    console.log('10 / +"2,5" = ' + 10 / +"2,5");    
    console.log("----------------------");
    return
}

function task4() {
    console.log("Задание 4");   
    console.log('\
let mode = "normal"; //корректно\n\
let my_valu3 = 102; //корректно\n\
let 3my_value3 = "102"; //некорректно (имя не может начинаться \
с числа)\n\
let __hello__ = "world"; //корректно\n\
let $$$ = "money"; //корректно\n\
let !0_world = true; //некорректно (имя не может начинаться с !)\
                ');
    
    console.log("----------------------");
    return;
}
